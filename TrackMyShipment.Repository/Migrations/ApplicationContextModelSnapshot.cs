// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TrackMyShipment.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    internal class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Address", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<bool>("Active");

                b.Property<string>("City");

                b.Property<string>("State");

                b.Property<string>("StreetLine1");

                b.Property<string>("StreetLine2");

                b.Property<int?>("UsersId");

                b.HasKey("Id");

                b.HasIndex("UsersId");

                b.ToTable("Address");
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Carrier", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Code");

                b.Property<long>("Cost");

                b.Property<string>("Logo");

                b.Property<string>("Name");

                b.Property<string>("Phone");

                b.Property<bool>("Status");

                b.HasKey("Id");

                b.ToTable("Carriers");
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Company", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name");

                b.HasKey("Id");

                b.ToTable("Company");
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name");

                b.HasKey("Id");

                b.ToTable("Roles");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Name = "admin"
                    },
                    new
                    {
                        Id = 2,
                        Name = "customer"
                    },
                    new
                    {
                        Id = 3,
                        Name = "carrier"
                    });
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Subscription", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Status");

                b.HasKey("Id");

                b.ToTable("Subscriptions");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Status = "free"
                    },
                    new
                    {
                        Id = 2,
                        Status = "paid"
                    });
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Supplies", b =>
            {
                b.Property<int?>("UserId");

                b.Property<int?>("CarrierId");

                b.HasKey("UserId", "CarrierId");

                b.HasIndex("CarrierId");

                b.ToTable("Supplies");
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int?>("CompanyId");

                b.Property<string>("Email");

                b.Property<string>("FirstName")
                    .HasMaxLength(50);

                b.Property<string>("LastName")
                    .HasMaxLength(50);

                b.Property<string>("Password")
                    .HasMaxLength(50);

                b.Property<string>("Phone")
                    .HasMaxLength(50);

                b.Property<int?>("RoleId");

                b.Property<int?>("SubscriptionId");

                b.HasKey("Id");

                b.HasIndex("CompanyId");

                b.HasIndex("Email")
                    .IsUnique()
                    .HasFilter("[Email] IS NOT NULL");

                b.HasIndex("RoleId");

                b.HasIndex("SubscriptionId");

                b.ToTable("Users");
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Address", b =>
            {
                b.HasOne("TrackMyShipment.Repository.Models.User", "Users")
                    .WithMany()
                    .HasForeignKey("UsersId");
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.Supplies", b =>
            {
                b.HasOne("TrackMyShipment.Repository.Models.Carrier", "Carrier")
                    .WithMany()
                    .HasForeignKey("CarrierId")
                    .OnDelete(DeleteBehavior.Cascade);

                b.HasOne("TrackMyShipment.Repository.Models.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("TrackMyShipment.Repository.Models.User", b =>
            {
                b.HasOne("TrackMyShipment.Repository.Models.Company", "Company")
                    .WithMany()
                    .HasForeignKey("CompanyId");

                b.HasOne("TrackMyShipment.Repository.Models.Role", "Role")
                    .WithMany()
                    .HasForeignKey("RoleId");

                b.HasOne("TrackMyShipment.Repository.Models.Subscription", "Subscription")
                    .WithMany()
                    .HasForeignKey("SubscriptionId");
            });
#pragma warning restore 612, 618
        }
    }
}